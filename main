//IMPORTING LIBRARIES
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn import metrics

//LOADING DATASET
car_dataset = pd.read_csv('car data.csv')

//STRUCTURE OF DATASET
car_dataset.head()
car_dataset.shape
car_dataset.info()

car_dataset.isnull().sum()

//COUNT OF X DATATYPES
print(car_dataset.Fuel_Type.value_counts())
print(car_dataset.Seller_Type.value_counts())
print(car_dataset.Transmission.value_counts())

//ENCODING CATEGORICAL DATA
# encoding "Fuel_Type" Column
car_dataset.replace({'Fuel_Type':{'Petrol':0,'Diesel':1,'CNG':2}},inplace=True)

# encoding "Seller_Type" Column
car_dataset.replace({'Seller_Type':{'Dealer':0,'Individual':1}},inplace=True)

# encoding "Transmission" Column
car_dataset.replace({'Transmission':{'Manual':0,'Automatic':1}},inplace=True)

X = car_dataset.drop(['Car_Name','Selling_Price'],axis=1)
Y = car_dataset['Selling_Price']
print(X)
print(Y)

//SPLITTING DATA
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.1, random_state=2)

//TRAINING MODEL
lin_reg_model = LinearRegression()

//FITTING DATA
lin_reg_model.fit(X_train,Y_train)

//PREDICTION WITH TRAIN DATA
training_data_prediction = lin_reg_model.predict(X_train)

//FINDING ACCURACY
error_score = metrics.r2_score(Y_train, training_data_prediction)
print("R squared Error : ", error_score)

//PLOTTING
plt.scatter(Y_train, training_data_prediction)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title(" Actual Prices vs Predicted Prices")
plt.show()

//PREDICTION WITH TEST DATA
test_data_prediction = lin_reg_model.predict(X_test)

error_score = metrics.r2_score(Y_test, test_data_prediction)
print("R squared Error : ", error_score)

plt.scatter(Y_test, test_data_prediction)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title(" Actual Prices vs Predicted Prices")
plt.show()
